import pandas as pd

#  Step 1: EXTRACT â€” Load Your Dataset
file_path = 'YOLOv10results.csv'  # Update if the file name is different
df = pd.read_csv(file_path)
print("First 5 rows of the dataset:")
print(df.head())

print("\n Dataset Summary:")
print(df.info())

print("\n Missing values in each column:")
print(df.isnull().sum())
 
# Step 2: TRANSFORM

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

# Strip spaces from column names
df.columns = df.columns.str.strip()

# Define features and target
X = df.drop(columns=['epoch', 'metrics/mAP50(B)'])  # remove target + index column
y = df['metrics/mAP50(B)']  # target column

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Scale numeric features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

print("Transformation complete.")
print("X_train_scaled shape:", X_train_scaled.shape)

# Step 3: LOAD - Save the transformed data

import numpy as np
import joblib

# Optional: Convert scaled arrays back to DataFrames for saving
X_train_df = pd.DataFrame(X_train_scaled, columns=X.columns)
X_test_df = pd.DataFrame(X_test_scaled, columns=X.columns)

# Save to CSV
X_train_df.to_csv('X_train_scaled.csv', index=False)
X_test_df.to_csv('X_test_scaled.csv', index=False)
y_train.to_csv('y_train.csv', index=False)
y_test.to_csv('y_test.csv', index=False)

# Save the fitted scaler to reuse later
joblib.dump(scaler, 'scaler.pkl')

print("[OK] Scaled datasets and scaler saved successfully.")
